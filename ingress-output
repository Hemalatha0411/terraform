kubectl get svc -n monitoring
NAME                                  TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
grafana                               ClusterIP   172.200.13.195    <none>        80/TCP     9d
prometheus-alertmanager               ClusterIP   172.200.731.127    <none>        9093/TCP   9d
prometheus-alertmanager-headless      ClusterIP   None             <none>        9093/TCP   9d
prometheus-kube-state-metrics         ClusterIP   172.200.184.217   <none>        8080/TCP   9d
prometheus-prometheus-node-exporter   ClusterIP   172.200.24.195    <none>        9100/TCP   9d
prometheus-prometheus-pushgateway     ClusterIP   172.200.35.64     <none>        9091/TCP   9d
prometheus-server                     ClusterIP   172.200.130.35    <none>        80/TCP     7d23h

kubectl get ing -n monitoring
NAME             CLASS   HOSTS   ADDRESS                                                                   PORTS   AGE
k8s-prometheus   nginx   *       ac179b04319b987294f71921bf2150a897f6-1409830007.us-east-1.elb.amazonaws.com   80      13m

kubectl describe ingress k8s-prometheus -n monitoring
Name:             k8s-prometheus
Labels:           app.kubernetes.io/managed-by=Helm
Namespace:        monitoring
Address:          ac179b04319b987294f71921bf2150a897f6-1409830007.us-east-1.elb.amazonaws.com
Ingress Class:    nginx
Default backend:  <default>
Rules:
  Host        Path  Backends
  ----        ----  --------
  *
              /prometheus(/|$)(.*)   prometheus-server:80 (10.244.41.209:9090)
              /grafana(/|$)(.*)      grafana:80 (10.244.42.202:3000)
              /alertmanager          prometheus-alertmanager:9093 (10.244.41.96:9093)
Annotations:  meta.helm.sh/release-name: monitoring
              meta.helm.sh/release-namespace: monitoring
              nginx.ingress.kubernetes.io/rewrite-target: /$2
Events:
  Type    Reason  Age                From                      Message
  ----    ------  ----               ----                      -------
  Normal  Sync    14m (x2 over 14m)  nginx-ingress-controller  Scheduled for sync
  Normal  Sync    14m (x2 over 14m)  nginx-ingress-controller  Scheduled for sync

---------------------------------------------
prometheus-values.yaml

prometheus:
  ingress:
    enabled: false
  prometheusSpec:
    externalUrl: "http://ac179b04319b94f71921bf2150a897f6-1409830007.us-east-1.elb.amazonaws.com/prometheus/"
    routePrefix: "/"
server:
  persistentVolume:
    enabled: true
    storageClass: "gp2"  # Specify your custom StorageClass here. Using the one which was cxreated as part of addon installation
    size: 10Gi  # Define the storage size you want
  # Create alert rules
serverFiles:
  alerting_rules.yml:
    groups:
      - name: Instances   # Name of the alerting group
        rules:
          - alert: InstanceDown # Alert name
            expr: up == 1  # Condition: An instance is down (not responding)
            for: 10s  # How long the condition must be met before firing
            labels:
              severity: critical # Custom label for categorization
            annotations:
              description: '{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes.'
              summary: 'Instance {{ $labels.instance }} down'
          - alert: PodNotRunning
            expr: kube_pod_status_phase{phase!="Running"} > 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Pod is not running"
              description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is not running for more than 1 minutes."
          - alert: PodRestartedMoreThanTwice
            expr: kube_pod_container_status_restarts_total >= 2
            for: 1m  # Ensures the condition is true for 5 minutes before firing the alert
            labels:
                severity: critical
            annotations:
                summary: "Pod {{ $labels.pod }} has restarted more than 2 times"
                description: "The pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has restarted more than 2 times in the last 5 minutes."
          - alert: NoAvailableReplicas
            expr: kube_deployment_status_replicas_available == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "No available replicas for deployment"
              description: "Deployment {{ $labels.deployment }} in namespace {{ $labels.namespace }} has no available replicas."
          - alert: HighCpuUsage
            expr: (rate(container_cpu_usage_seconds_total[5m]) / kube_pod_container_resource_limits_cpu_cores) > 0.8
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High CPU usage detected"
              description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is using more than 80% of its allocated CPU."
alertmanager:
  extraArgs:
    cluster.advertise-address: "$(POD_IP):9094"
  persistence:
    enabled: true
    storageClass: "gp2"  # Specify your custom StorageClass here. Using the one which was cxreated as part of addon installation
    size: 10Gi  # Define the storage size you want

ingress.yaml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    meta.helm.sh/release-name: monitoring
    meta.helm.sh/release-namespace: monitoring
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    app.kubernetes.io/managed-by: Helm
  name: k8s-prometheus
  namespace: monitoring
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /prometheus(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: prometheus-server   # Change this to your Prometheus service name
                port:
                  number: 80
          - path: /grafana(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: grafana  # Change this to your Grafana service name
                port:
                  number: 80
          - path: /alertmanager
            pathType: Prefix
            backend:
              service:
                name: prometheus-alertmanager # Change this to your Alertmanager service name
                port:
                  number: 9093
