helm_release.karpenter: Creating...
╷
│ Error: could not download chart: public.ecr.aws/karpenter/karpenter/karpenter:0.36.0: not found
│
│   with helm_release.karpenter,
│   on karpenter-helm.tf line 1, in resource "helm_release" "karpenter":
│    1: resource "helm_release" "karpenter" {
|

---------------

helm_release.karpenter: Creating...
╷
│ Error: Kubernetes cluster unreachable: invalid configuration: no configuration has been provided, try setting KUBERNETES_MASTER environment variable
│
│   with helm_release.karpenter,
│   on karpenter-helm.tf line 1, in resource "helm_release" "karpenter":
│    1: resource "helm_release" "karpenter" {
│

----------

 Error: API did not recognize GroupVersionKind from manifest (CRD may not be installed)
│
│   with kubernetes_manifest.karpenter_provisioner,
│   on karpenter-provisioner.tf line 1, in resource "kubernetes_manifest" "karpenter_provisioner":
│    1: resource "kubernetes_manifest" "karpenter_provisioner" {
│
│ no matches for kind "Provisioner" in group "karpenter.sh"

------------
 Error: API did not recognize GroupVersionKind from manifest (CRD may not be installed)
│
│   with kubernetes_manifest.karpenter_provisioner,
│   on karpenter-provisioner.tf line 2, in resource "kubernetes_manifest" "karpenter_provisioner":
│    2: resource "kubernetes_manifest" "karpenter_provisioner" {
│
│ no matches for kind "Provisioner" in group "karpenter.sh"
╵
----------
module.karpenter.aws_eks_access_entry.node[0]: Creation complete after 1s [id=zpl-cmm:arn:aws:iam::863518427890:role/Karpenter-zpl-cmm-20250509072644406500000006]
kubectl_manifest.karpenter_node_pool: Still creating... [30s elapsed]
╷
│ Error: karpenter-node-pool failed to run apply: error when creating "/tmp/1903501594kubectl_manifest.yaml": NodePool.karpenter.sh "karpenter-node-pool" is invalid: spec.template.spec.requirements[3].key: Invalid value: "string": label domain "karpenter.k8s.aws" is restricted
│
│   with kubectl_manifest.karpenter_node_pool,
│   on karpenter-manifest.tf line 2, in resource "kubectl_manifest" "karpenter_node_pool":
│    2: resource "kubectl_manifest" "karpenter_node_pool" {

-----

Events:
  Type     Reason   Age                   From     Message
  ----     ------   ----                  ----     -------
  Normal   Pulled   2m44s (x22 over 85m)  kubelet  Container image "public.ecr.aws/karpenter/controller:1.4.0@sha256:e39215600820529c25a119b95f7431dcc103834766426b2beb48f87fa87555bb" already present on machine
  Warning  BackOff  2s (x423 over 85m)    kubelet  Back-off restarting failed container controller in pod karpenter-574f656764-4gfrt_kube-system(ebbc97cc-3b1e-4124-9062-091c84d5df8d)

--------
Initializing the backend...
Initializing modules...
Initializing provider plugins...
- Reusing previous version of hashicorp/kubernetes from the dependency lock file
- Reusing previous version of hashicorp/cloudinit from the dependency lock file
- Reusing previous version of hashicorp/null from the dependency lock file
- Reusing previous version of hashicorp/tls from the dependency lock file
- Reusing previous version of hashicorp/helm from the dependency lock file
- Finding gavinbunney/kubectl versions matching "~> 1.14"...
- Finding latest version of hashicorp/kubectl...
- Reusing previous version of hashicorp/aws from the dependency lock file
- Reusing previous version of hashicorp/time from the dependency lock file
- Using previously-installed hashicorp/null v3.2.4
- Using previously-installed hashicorp/tls v4.1.0
- Using previously-installed hashicorp/helm v2.17.0
- Installing gavinbunney/kubectl v1.19.0...
- Installed gavinbunney/kubectl v1.19.0 (self-signed, key ID 1E1CE42504F5FBB2)
- Using previously-installed hashicorp/aws v5.96.0
- Using previously-installed hashicorp/time v0.13.1
- Using previously-installed hashicorp/kubernetes v2.36.0
- Using previously-installed hashicorp/cloudinit v2.3.7
Partner and community providers are signed by their developers.
If you'd like to know more about provider signing, you can read about it here:
https://developer.hashicorp.com/terraform/cli/plugins/signing
╷
│ Error: Failed to query available provider packages
│
│ Could not retrieve the list of available versions for provider hashicorp/kubectl: provider registry registry.terraform.io does not have a provider named
│ registry.terraform.io/hashicorp/kubectl
│
│ Did you intend to use gavinbunney/kubectl? If so, you must specify that source address in each module which requires that provider. To see which modules
│ are currently depending on hashicorp/kubectl, run the following command:
│     terraform providers
╵
------------
Initializing the backend...
Initializing modules...
╷
│ Warning: Reference to undefined provider
│
│   on main.tf line 50, in module "karpenter":
│   50:      kubectl = kubectl.gavin
│
│ There is no explicit declaration for local provider name "kubectl" in module.karpenter, so Terraform is assuming you mean to pass a configuration for
│ "hashicorp/kubectl".
│
│ If you also control the child module, add a required_providers entry named "kubectl" with the source address "hashicorp/kubectl".
╵
╷
│ Error: Provider type mismatch
│
│   on main.tf line 50, in module "karpenter":
│   50:      kubectl = kubectl.gavin
│
│ The local name "kubectl.gavin" in the root module represents provider "gavinbunney/kubectl", but "kubectl" in module.karpenter represents
│ "hashicorp/kubectl".
│
│ Each provider has its own distinct configuration schema and provider types, so this module's "kubectl" can be assigned only a configuration for
│ hashicorp/kubectl, which is not required by module.karpenter.
╵

